
Timer1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  0000030e  000003c2  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000c8  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005b  00000000  00000000  000003c2  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 00000038  00000000  00000000  0000041d  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000078  00000000  00000000  00000455  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000dd4  00000000  00000000  000004cd  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000749  00000000  00000000  000012a1  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000037f  00000000  00000000  000019ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000010c  00000000  00000000  00001d6c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000253  00000000  00000000  00001e78  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002b5  00000000  00000000  000020cb  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000070  00000000  00000000  00002380  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  000002ea  000002ea  0000039e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000023f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.main    00000028  0000028c  0000028c  00000340  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.TIMER1_clear 0000002e  0000025e  0000025e  00000312  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.TIMER1_init 00000012  000002ca  000002ca  0000037e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.TIMER1_start 0000000e  000002dc  000002dc  00000390  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.TIMER1_setFrequency 0000010c  000000c8  000000c8  0000017c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.TIMER1_setWidthB 00000046  000001d4  000001d4  00000288  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .data.TIMER1_PrescalerVals 0000000a  00800100  000002f8  000003ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 21 .data.TIMER1_Prescalers 0000000a  0080010a  00000302  000003b6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 22 .data.TCCR1B_start_ON 00000002  00800114  0000030c  000003c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 23 .bss.TIMER1_PRESC 00000002  00800116  00800116  000003c2  2**0
                  ALLOC
 24 .text.libgcc.div 00000044  0000021a  0000021a  000002ce  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.__dummy_fini 00000002  000002f2  000002f2  000003a6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.__dummy_funcs_on_exit 00000002  000002f4  000002f4  000003a8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.__dummy_simulator_exit 00000002  000002f6  000002f6  000003aa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.exit    00000016  000002b4  000002b4  00000368  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text._Exit   00000004  000002ee  000002ee  000003a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3a 00 	jmp	0x74	; 0x74 <__ctors_end>
   4:	0c 94 75 01 	jmp	0x2ea	; 0x2ea <__bad_interrupt>
   8:	0c 94 75 01 	jmp	0x2ea	; 0x2ea <__bad_interrupt>
   c:	0c 94 75 01 	jmp	0x2ea	; 0x2ea <__bad_interrupt>
  10:	0c 94 75 01 	jmp	0x2ea	; 0x2ea <__bad_interrupt>
  14:	0c 94 75 01 	jmp	0x2ea	; 0x2ea <__bad_interrupt>
  18:	0c 94 75 01 	jmp	0x2ea	; 0x2ea <__bad_interrupt>
  1c:	0c 94 75 01 	jmp	0x2ea	; 0x2ea <__bad_interrupt>
  20:	0c 94 75 01 	jmp	0x2ea	; 0x2ea <__bad_interrupt>
  24:	0c 94 75 01 	jmp	0x2ea	; 0x2ea <__bad_interrupt>
  28:	0c 94 75 01 	jmp	0x2ea	; 0x2ea <__bad_interrupt>
  2c:	0c 94 75 01 	jmp	0x2ea	; 0x2ea <__bad_interrupt>
  30:	0c 94 75 01 	jmp	0x2ea	; 0x2ea <__bad_interrupt>
  34:	0c 94 75 01 	jmp	0x2ea	; 0x2ea <__bad_interrupt>
  38:	0c 94 75 01 	jmp	0x2ea	; 0x2ea <__bad_interrupt>
  3c:	0c 94 75 01 	jmp	0x2ea	; 0x2ea <__bad_interrupt>
  40:	0c 94 75 01 	jmp	0x2ea	; 0x2ea <__bad_interrupt>
  44:	0c 94 75 01 	jmp	0x2ea	; 0x2ea <__bad_interrupt>
  48:	0c 94 75 01 	jmp	0x2ea	; 0x2ea <__bad_interrupt>
  4c:	0c 94 75 01 	jmp	0x2ea	; 0x2ea <__bad_interrupt>
  50:	0c 94 75 01 	jmp	0x2ea	; 0x2ea <__bad_interrupt>
  54:	0c 94 75 01 	jmp	0x2ea	; 0x2ea <__bad_interrupt>
  58:	0c 94 75 01 	jmp	0x2ea	; 0x2ea <__bad_interrupt>
  5c:	0c 94 75 01 	jmp	0x2ea	; 0x2ea <__bad_interrupt>
  60:	0c 94 75 01 	jmp	0x2ea	; 0x2ea <__bad_interrupt>
  64:	0c 94 75 01 	jmp	0x2ea	; 0x2ea <__bad_interrupt>

00000068 <.dinit>:
  68:	01 00       	.word	0x0001	; ????
  6a:	01 16       	cp	r0, r17
  6c:	00 02       	muls	r16, r16
  6e:	f8 01       	movw	r30, r16
  70:	16 01       	movw	r2, r12
  72:	18 80       	ld	r1, Y

00000074 <__ctors_end>:
  74:	11 24       	eor	r1, r1
  76:	1f be       	out	0x3f, r1	; 63
  78:	cf ef       	ldi	r28, 0xFF	; 255
  7a:	d8 e0       	ldi	r29, 0x08	; 8
  7c:	de bf       	out	0x3e, r29	; 62
  7e:	cd bf       	out	0x3d, r28	; 61

00000080 <__do_copy_data>:
  80:	e8 e6       	ldi	r30, 0x68	; 104
  82:	f0 e0       	ldi	r31, 0x00	; 0
  84:	40 e0       	ldi	r20, 0x00	; 0
  86:	17 c0       	rjmp	.+46     	; 0xb6 <__do_clear_bss+0x8>
  88:	b5 91       	lpm	r27, Z+
  8a:	a5 91       	lpm	r26, Z+
  8c:	35 91       	lpm	r19, Z+
  8e:	25 91       	lpm	r18, Z+
  90:	05 91       	lpm	r16, Z+
  92:	07 fd       	sbrc	r16, 7
  94:	0c c0       	rjmp	.+24     	; 0xae <__do_clear_bss>
  96:	95 91       	lpm	r25, Z+
  98:	85 91       	lpm	r24, Z+
  9a:	ef 01       	movw	r28, r30
  9c:	f9 2f       	mov	r31, r25
  9e:	e8 2f       	mov	r30, r24
  a0:	05 90       	lpm	r0, Z+
  a2:	0d 92       	st	X+, r0
  a4:	a2 17       	cp	r26, r18
  a6:	b3 07       	cpc	r27, r19
  a8:	d9 f7       	brne	.-10     	; 0xa0 <__do_copy_data+0x20>
  aa:	fe 01       	movw	r30, r28
  ac:	04 c0       	rjmp	.+8      	; 0xb6 <__do_clear_bss+0x8>

000000ae <__do_clear_bss>:
  ae:	1d 92       	st	X+, r1
  b0:	a2 17       	cp	r26, r18
  b2:	b3 07       	cpc	r27, r19
  b4:	e1 f7       	brne	.-8      	; 0xae <__do_clear_bss>
  b6:	e4 37       	cpi	r30, 0x74	; 116
  b8:	f4 07       	cpc	r31, r20
  ba:	31 f7       	brne	.-52     	; 0x88 <__do_copy_data+0x8>
  bc:	0e 94 46 01 	call	0x28c	; 0x28c <main>
  c0:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <exit>

000000c4 <_exit>:
  c4:	f8 94       	cli

000000c6 <__stop_program>:
  c6:	ff cf       	rjmp	.-2      	; 0xc6 <__stop_program>

Disassembly of section .text:

000002ea <__bad_interrupt>:
 2ea:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

Disassembly of section .text.main:

0000028c <main>:

float f;

int main(void)
{
	DDRB = 0b11111111;
 28c:	8f ef       	ldi	r24, 0xFF	; 255
 28e:	84 b9       	out	0x04, r24	; 4
	
	sei();
 290:	78 94       	sei
	
	TIMER1_clear();
 292:	0e 94 2f 01 	call	0x25e	; 0x25e <TIMER1_clear>
	TIMER1_init();
 296:	0e 94 65 01 	call	0x2ca	; 0x2ca <TIMER1_init>
	
	TIMER1_setFrequency(10);
 29a:	6a e0       	ldi	r22, 0x0A	; 10
 29c:	70 e0       	ldi	r23, 0x00	; 0
 29e:	80 e0       	ldi	r24, 0x00	; 0
 2a0:	90 e0       	ldi	r25, 0x00	; 0
 2a2:	0e 94 64 00 	call	0xc8	; 0xc8 <_etext>
	TIMER1_setWidthB(50);
 2a6:	82 e3       	ldi	r24, 0x32	; 50
 2a8:	90 e0       	ldi	r25, 0x00	; 0
 2aa:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <TIMER1_setWidthB>
	TIMER1_start();
 2ae:	0e 94 6e 01 	call	0x2dc	; 0x2dc <TIMER1_start>
 2b2:	ff cf       	rjmp	.-2      	; 0x2b2 <main+0x26>

Disassembly of section .text.TIMER1_clear:

0000025e <TIMER1_clear>:
	TCCR1B_PRESC_1024
};


void TIMER1_clear() {
	TCCR1A = 0; TCCR1B = 0;
 25e:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
 262:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	TCNT1  = 0; ICR1   = 0;
 266:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 26a:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
 26e:	10 92 87 00 	sts	0x0087, r1	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
 272:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
	OCR1A  = 0; OCR1B  = 0;
 276:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 27a:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 27e:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
 282:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
	TIMSK1 = 0;
 286:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
 28a:	08 95       	ret

Disassembly of section .text.TIMER1_init:

000002ca <TIMER1_init>:
}

void TIMER1_init() {
	TCCR1A = TCCR1A_start;
 2ca:	81 ea       	ldi	r24, 0xA1	; 161
 2cc:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
	TCCR1B = TCCR1B_start_OFF;
 2d0:	80 e1       	ldi	r24, 0x10	; 16
 2d2:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	TIMSK1 = TIMSK1_start;
 2d6:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
 2da:	08 95       	ret

Disassembly of section .text.TIMER1_start:

000002dc <TIMER1_start>:
}

void TIMER1_start() { TCCR1B = TCCR1B_start_ON;  }
 2dc:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <TCCR1B_start_ON>
 2e0:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <TCCR1B_start_ON+0x1>
 2e4:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
 2e8:	08 95       	ret

Disassembly of section .text.TIMER1_setFrequency:

000000c8 <TIMER1_setFrequency>:
	#else
	TOP = OCR1A;
	#endif
	
	OCR1B = (uint16_t)(duty / 100.0 * TOP);
}
  c8:	8f 92       	push	r8
  ca:	9f 92       	push	r9
  cc:	af 92       	push	r10
  ce:	bf 92       	push	r11
  d0:	ef 92       	push	r14
  d2:	ff 92       	push	r15
  d4:	0f 93       	push	r16
  d6:	1f 93       	push	r17
  d8:	cf 93       	push	r28
  da:	df 93       	push	r29
  dc:	61 15       	cp	r22, r1
  de:	71 05       	cpc	r23, r1
  e0:	81 05       	cpc	r24, r1
  e2:	91 05       	cpc	r25, r1
  e4:	09 f4       	brne	.+2      	; 0xe8 <TIMER1_setFrequency+0x20>
  e6:	6a c0       	rjmp	.+212    	; 0x1bc <TIMER1_setFrequency+0xf4>
  e8:	9b 01       	movw	r18, r22
  ea:	ac 01       	movw	r20, r24
  ec:	22 0f       	add	r18, r18
  ee:	33 1f       	adc	r19, r19
  f0:	44 1f       	adc	r20, r20
  f2:	55 1f       	adc	r21, r21
  f4:	22 0f       	add	r18, r18
  f6:	33 1f       	adc	r19, r19
  f8:	44 1f       	adc	r20, r20
  fa:	55 1f       	adc	r21, r21
  fc:	60 e0       	ldi	r22, 0x00	; 0
  fe:	74 e2       	ldi	r23, 0x24	; 36
 100:	84 ef       	ldi	r24, 0xF4	; 244
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	0e 94 0d 01 	call	0x21a	; 0x21a <__udivmodsi4>
 108:	49 01       	movw	r8, r18
 10a:	5a 01       	movw	r10, r20
 10c:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <TIMER1_Prescalers>
 110:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <TIMER1_Prescalers+0x1>
 114:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <TIMER1_PRESC+0x1>
 118:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <TIMER1_PRESC>
 11c:	20 91 16 01 	lds	r18, 0x0116	; 0x800116 <TIMER1_PRESC>
 120:	30 91 17 01 	lds	r19, 0x0117	; 0x800117 <TIMER1_PRESC+0x1>
 124:	40 e0       	ldi	r20, 0x00	; 0
 126:	50 e0       	ldi	r21, 0x00	; 0
 128:	c5 01       	movw	r24, r10
 12a:	b4 01       	movw	r22, r8
 12c:	0e 94 0d 01 	call	0x21a	; 0x21a <__udivmodsi4>
 130:	21 15       	cp	r18, r1
 132:	31 05       	cpc	r19, r1
 134:	41 40       	sbci	r20, 0x01	; 1
 136:	51 05       	cpc	r21, r1
 138:	e8 f0       	brcs	.+58     	; 0x174 <TIMER1_setFrequency+0xac>
 13a:	0c e0       	ldi	r16, 0x0C	; 12
 13c:	11 e0       	ldi	r17, 0x01	; 1
 13e:	c1 e0       	ldi	r28, 0x01	; 1
 140:	d0 e0       	ldi	r29, 0x00	; 0
 142:	7e 01       	movw	r14, r28
 144:	f8 01       	movw	r30, r16
 146:	81 91       	ld	r24, Z+
 148:	91 91       	ld	r25, Z+
 14a:	8f 01       	movw	r16, r30
 14c:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <TIMER1_PRESC+0x1>
 150:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <TIMER1_PRESC>
 154:	20 91 16 01 	lds	r18, 0x0116	; 0x800116 <TIMER1_PRESC>
 158:	30 91 17 01 	lds	r19, 0x0117	; 0x800117 <TIMER1_PRESC+0x1>
 15c:	40 e0       	ldi	r20, 0x00	; 0
 15e:	50 e0       	ldi	r21, 0x00	; 0
 160:	c5 01       	movw	r24, r10
 162:	b4 01       	movw	r22, r8
 164:	0e 94 0d 01 	call	0x21a	; 0x21a <__udivmodsi4>
 168:	21 15       	cp	r18, r1
 16a:	31 05       	cpc	r19, r1
 16c:	41 40       	sbci	r20, 0x01	; 1
 16e:	51 05       	cpc	r21, r1
 170:	f8 f4       	brcc	.+62     	; 0x1b0 <TIMER1_setFrequency+0xe8>
 172:	02 c0       	rjmp	.+4      	; 0x178 <TIMER1_setFrequency+0xb0>
 174:	e1 2c       	mov	r14, r1
 176:	f1 2c       	mov	r15, r1
 178:	f7 01       	movw	r30, r14
 17a:	ee 0f       	add	r30, r30
 17c:	ff 1f       	adc	r31, r31
 17e:	e0 50       	subi	r30, 0x00	; 0
 180:	ff 4f       	sbci	r31, 0xFF	; 255
 182:	80 81       	ld	r24, Z
 184:	91 81       	ldd	r25, Z+1	; 0x01
 186:	80 61       	ori	r24, 0x10	; 16
 188:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <TCCR1B_start_ON+0x1>
 18c:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <TCCR1B_start_ON>
 190:	20 91 16 01 	lds	r18, 0x0116	; 0x800116 <TIMER1_PRESC>
 194:	30 91 17 01 	lds	r19, 0x0117	; 0x800117 <TIMER1_PRESC+0x1>
 198:	40 e0       	ldi	r20, 0x00	; 0
 19a:	50 e0       	ldi	r21, 0x00	; 0
 19c:	c5 01       	movw	r24, r10
 19e:	b4 01       	movw	r22, r8
 1a0:	0e 94 0d 01 	call	0x21a	; 0x21a <__udivmodsi4>
 1a4:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 1a8:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 1ac:	81 e0       	ldi	r24, 0x01	; 1
 1ae:	07 c0       	rjmp	.+14     	; 0x1be <TIMER1_setFrequency+0xf6>
 1b0:	21 96       	adiw	r28, 0x01	; 1
 1b2:	c5 30       	cpi	r28, 0x05	; 5
 1b4:	d1 05       	cpc	r29, r1
 1b6:	29 f6       	brne	.-118    	; 0x142 <TIMER1_setFrequency+0x7a>
 1b8:	80 e0       	ldi	r24, 0x00	; 0
 1ba:	01 c0       	rjmp	.+2      	; 0x1be <TIMER1_setFrequency+0xf6>
 1bc:	80 e0       	ldi	r24, 0x00	; 0
 1be:	df 91       	pop	r29
 1c0:	cf 91       	pop	r28
 1c2:	1f 91       	pop	r17
 1c4:	0f 91       	pop	r16
 1c6:	ff 90       	pop	r15
 1c8:	ef 90       	pop	r14
 1ca:	bf 90       	pop	r11
 1cc:	af 90       	pop	r10
 1ce:	9f 90       	pop	r9
 1d0:	8f 90       	pop	r8
 1d2:	08 95       	ret

Disassembly of section .text.TIMER1_setWidthB:

000001d4 <TIMER1_setWidthB>:

void TIMER1_setWidthB( uint16_t width ) {
	uint32_t val = ( ( F_CPU / 2000000UL ) * width ) / TIMER1_PRESC;
 1d4:	20 91 16 01 	lds	r18, 0x0116	; 0x800116 <TIMER1_PRESC>
 1d8:	30 91 17 01 	lds	r19, 0x0117	; 0x800117 <TIMER1_PRESC+0x1>
 1dc:	a0 e0       	ldi	r26, 0x00	; 0
 1de:	b0 e0       	ldi	r27, 0x00	; 0
 1e0:	88 0f       	add	r24, r24
 1e2:	99 1f       	adc	r25, r25
 1e4:	aa 1f       	adc	r26, r26
 1e6:	bb 1f       	adc	r27, r27
 1e8:	88 0f       	add	r24, r24
 1ea:	99 1f       	adc	r25, r25
 1ec:	aa 1f       	adc	r26, r26
 1ee:	bb 1f       	adc	r27, r27
 1f0:	bc 01       	movw	r22, r24
 1f2:	cd 01       	movw	r24, r26
 1f4:	66 0f       	add	r22, r22
 1f6:	77 1f       	adc	r23, r23
 1f8:	88 1f       	adc	r24, r24
 1fa:	99 1f       	adc	r25, r25
 1fc:	40 e0       	ldi	r20, 0x00	; 0
 1fe:	50 e0       	ldi	r21, 0x00	; 0
 200:	0e 94 0d 01 	call	0x21a	; 0x21a <__udivmodsi4>
	
	#if TIMER1_MODE == 1 || TIMER1_MODE == 2 || TIMER1_MODE == 3 || TIMER1_MODE == 8 || TIMER1_MODE == 9 || TIMER1_MODE == 10 || TIMER1_MODE == 11
	val /= 2;
	#endif
	
	OCR1B = val;
 204:	da 01       	movw	r26, r20
 206:	c9 01       	movw	r24, r18
 208:	b6 95       	lsr	r27
 20a:	a7 95       	ror	r26
 20c:	97 95       	ror	r25
 20e:	87 95       	ror	r24
 210:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
 214:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
 218:	08 95       	ret

Disassembly of section .text.libgcc.div:

0000021a <__udivmodsi4>:
 21a:	a1 e2       	ldi	r26, 0x21	; 33
 21c:	1a 2e       	mov	r1, r26
 21e:	aa 1b       	sub	r26, r26
 220:	bb 1b       	sub	r27, r27
 222:	fd 01       	movw	r30, r26
 224:	0d c0       	rjmp	.+26     	; 0x240 <__udivmodsi4_ep>

00000226 <__udivmodsi4_loop>:
 226:	aa 1f       	adc	r26, r26
 228:	bb 1f       	adc	r27, r27
 22a:	ee 1f       	adc	r30, r30
 22c:	ff 1f       	adc	r31, r31
 22e:	a2 17       	cp	r26, r18
 230:	b3 07       	cpc	r27, r19
 232:	e4 07       	cpc	r30, r20
 234:	f5 07       	cpc	r31, r21
 236:	20 f0       	brcs	.+8      	; 0x240 <__udivmodsi4_ep>
 238:	a2 1b       	sub	r26, r18
 23a:	b3 0b       	sbc	r27, r19
 23c:	e4 0b       	sbc	r30, r20
 23e:	f5 0b       	sbc	r31, r21

00000240 <__udivmodsi4_ep>:
 240:	66 1f       	adc	r22, r22
 242:	77 1f       	adc	r23, r23
 244:	88 1f       	adc	r24, r24
 246:	99 1f       	adc	r25, r25
 248:	1a 94       	dec	r1
 24a:	69 f7       	brne	.-38     	; 0x226 <__udivmodsi4_loop>
 24c:	60 95       	com	r22
 24e:	70 95       	com	r23
 250:	80 95       	com	r24
 252:	90 95       	com	r25
 254:	9b 01       	movw	r18, r22
 256:	ac 01       	movw	r20, r24
 258:	bd 01       	movw	r22, r26
 25a:	cf 01       	movw	r24, r30
 25c:	08 95       	ret

Disassembly of section .text.__dummy_fini:

000002f2 <_fini>:
 2f2:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

000002f4 <__funcs_on_exit>:
 2f4:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

000002f6 <__simulator_exit>:
 2f6:	08 95       	ret

Disassembly of section .text.exit:

000002b4 <exit>:
 2b4:	ec 01       	movw	r28, r24
 2b6:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <__funcs_on_exit>
 2ba:	0e 94 79 01 	call	0x2f2	; 0x2f2 <_fini>
 2be:	ce 01       	movw	r24, r28
 2c0:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <__simulator_exit>
 2c4:	ce 01       	movw	r24, r28
 2c6:	0e 94 77 01 	call	0x2ee	; 0x2ee <_Exit>

Disassembly of section .text._Exit:

000002ee <_Exit>:
 2ee:	0e 94 62 00 	call	0xc4	; 0xc4 <_exit>
