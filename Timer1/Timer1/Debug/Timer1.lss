
Timer1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  0000020c  2**0
                  ALLOC, LOAD, DATA
  1 .text         00000100  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  0000020c  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  0000023b  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  00000249  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001101  00000000  00000000  00000299  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000bc8  00000000  00000000  0000139a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000383  00000000  00000000  00001f62  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000068  00000000  00000000  000022e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000040b  00000000  00000000  00002350  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000030  00000000  00000000  0000275b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  0000018a  0000018a  000001fe  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000278c  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.main    0000002c  0000012e  0000012e  000001a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.TIMER1_clear 0000002e  00000100  00000100  00000174  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.TIMER1_set 00000012  00000170  00000170  000001e4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.TIMER1_start 00000008  00000182  00000182  000001f6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.__dummy_fini 00000002  00000192  00000192  00000206  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.__dummy_funcs_on_exit 00000002  00000194  00000194  00000208  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.__dummy_simulator_exit 00000002  00000196  00000196  0000020a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.exit    00000016  0000015a  0000015a  000001ce  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text._Exit   00000004  0000018e  0000018e  00000202  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
   8:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
   c:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  10:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  14:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  18:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  1c:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  20:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  24:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  28:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  2c:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  30:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  34:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  38:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  3c:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  40:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  44:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  48:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  4c:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  50:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  54:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  58:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  5c:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  60:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  64:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  68:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  6c:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  70:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  74:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  78:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  7c:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  80:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  84:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  88:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  8c:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  90:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  94:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  98:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  9c:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  a0:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  a4:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  a8:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  ac:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  b0:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  b4:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  b8:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  bc:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  c0:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  c4:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  c8:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  cc:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  d0:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  d4:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  d8:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  dc:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>
  e0:	0c 94 c5 00 	jmp	0x18a	; 0x18a <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60
  f4:	0e 94 97 00 	call	0x12e	; 0x12e <main>
  f8:	0c 94 ad 00 	jmp	0x15a	; 0x15a <exit>

000000fc <_exit>:
  fc:	f8 94       	cli

000000fe <__stop_program>:
  fe:	ff cf       	rjmp	.-2      	; 0xfe <__stop_program>

Disassembly of section .text:

0000018a <__bad_interrupt>:
 18a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

Disassembly of section .text.main:

0000012e <main>:
#include <avr/interrupt.h>
#include "Timer1.h"

int main(void)
{
	DDRB = 0b11111111;
 12e:	8f ef       	ldi	r24, 0xFF	; 255
 130:	84 b9       	out	0x04, r24	; 4
	
	sei();
 132:	78 94       	sei
	
	TIMER1_clear();
 134:	0e 94 80 00 	call	0x100	; 0x100 <_etext>
    TIMER1_set();
 138:	0e 94 b8 00 	call	0x170	; 0x170 <TIMER1_set>
	
	OCR1A = 1999;
 13c:	8f ec       	ldi	r24, 0xCF	; 207
 13e:	97 e0       	ldi	r25, 0x07	; 7
 140:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
 144:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
	OCR1B = 50;
 148:	82 e3       	ldi	r24, 0x32	; 50
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7c008b>
 150:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7c008a>
	
	TIMER1_start();
 154:	0e 94 c1 00 	call	0x182	; 0x182 <TIMER1_start>
 158:	ff cf       	rjmp	.-2      	; 0x158 <main+0x2a>

Disassembly of section .text.TIMER1_clear:

00000100 <TIMER1_clear>:
#include <avr/io.h>
#include <avr/interrupt.h>
#include "Timer1.h"

extern void TIMER1_clear() {
	TCCR1A = 0; TCCR1B = 0;
 100:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
 104:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7c0081>
	TCNT1  = 0; ICR1   = 0;
 108:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7c0085>
 10c:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7c0084>
 110:	10 92 87 00 	sts	0x0087, r1	; 0x800087 <__TEXT_REGION_LENGTH__+0x7c0087>
 114:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <__TEXT_REGION_LENGTH__+0x7c0086>
	OCR1A  = 0; OCR1B  = 0;
 118:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
 11c:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
 120:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7c008b>
 124:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7c008a>
	TIMSK1 = 0;
 128:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7c006f>
 12c:	08 95       	ret

Disassembly of section .text.TIMER1_set:

00000170 <TIMER1_set>:
}

extern void TIMER1_set() {
	TCCR1A = TCCR1A_start;
 170:	81 e2       	ldi	r24, 0x21	; 33
 172:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
	TCCR1B = TCCR1B_start_OFF;
 176:	80 e1       	ldi	r24, 0x10	; 16
 178:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7c0081>
	TIMSK1 = TIMSK1_start;
 17c:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7c006f>
 180:	08 95       	ret

Disassembly of section .text.TIMER1_start:

00000182 <TIMER1_start>:
}

extern void TIMER1_start() {
	TCCR1B = TCCR1B_start_ON;
 182:	81 e1       	ldi	r24, 0x11	; 17
 184:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7c0081>
 188:	08 95       	ret

Disassembly of section .text.__dummy_fini:

00000192 <_fini>:
 192:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000194 <__funcs_on_exit>:
 194:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000196 <__simulator_exit>:
 196:	08 95       	ret

Disassembly of section .text.exit:

0000015a <exit>:
 15a:	ec 01       	movw	r28, r24
 15c:	0e 94 ca 00 	call	0x194	; 0x194 <__funcs_on_exit>
 160:	0e 94 c9 00 	call	0x192	; 0x192 <_fini>
 164:	ce 01       	movw	r24, r28
 166:	0e 94 cb 00 	call	0x196	; 0x196 <__simulator_exit>
 16a:	ce 01       	movw	r24, r28
 16c:	0e 94 c7 00 	call	0x18e	; 0x18e <_Exit>

Disassembly of section .text._Exit:

0000018e <_Exit>:
 18e:	0e 94 7e 00 	call	0xfc	; 0xfc <_exit>
